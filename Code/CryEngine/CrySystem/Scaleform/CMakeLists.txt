#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- scaleform_helper.waf_files --
sources_platform(ALL)
add_sources("NoUberFile"
	SOURCE_GROUP "Scaleform"
		"ScaleformHelper.cpp"
		"ScaleformHelper.h"
		"ScaleformRecording.h"
		"ScaleformRecording.cpp"
		"StdAfx.h"
)

add_sources("ScaleformHelper_uber.cpp"
	SOURCE_GROUP "Scaleform"
		"FlashPlayerInstance.cpp"
		"GAllocatorCryMem.cpp"
		"GFileCryPak.cpp"
		"GFxVideoSoundCrySound.cpp"
		"GFxVideoWrapper.cpp"
		"SharedResources.cpp"
		"SharedStates.cpp"
		"FlashPlayerInstance.h"
		"GAllocatorCryMem.h"
		"GFileCryPak.h"
		"GFxVideoSoundCrySound.h"
		"GFxVideoWrapper.h"
		"SharedResources.h"
		"SharedStates.h"
		"GImeHelper.h"
		"GImeHelper.cpp"
		"GTexture_Impl.h"
		"GTexture_Impl.cpp"
		"GImageInfo_Impl.h"
		"GImageInfo_Impl.cpp"
)

end_sources()
#END-FILE-LIST

# Some platforms can never build to shared libraries, so we need to skip the helper library for those.
if(OPTION_SCALEFORMHELPER AND NOT (ORBIS OR ANDROID))
	CryEngineModule(CryScaleformHelper SOLUTION_FOLDER "CryEngine" FORCE_SHARED)

	target_include_directories( ${THIS_PROJECT} PRIVATE .. )
	target_compile_definitions( ${THIS_PROJECT} PRIVATE -DCRY_IS_SCALEFORM_HELPER)
	target_link_libraries(${THIS_PROJECT} PRIVATE zlib expat)
	use_scaleform()
	if (WIN32 OR WIN64)
		target_link_libraries(${THIS_PROJECT} PRIVATE Ole32 Winmm)
	endif()
	if (LINUX)
		target_link_libraries(${THIS_PROJECT} PRIVATE png16 jpeg)
	endif()
	if (APPLE)
		target_link_libraries(${THIS_PROJECT} PRIVATE png16)
	endif()
else()
	CryFileContainer(CryScaleformHelper SOLUTION_FOLDER "CryEngine")
endif()
