# Note: By default, the include files required are located at C:\Program Files (x86)\SCE\Common\External Tools\libScePad for PC Games
# Copy the \include and \lib folder from there to <ROOT>\Code\SDKs\OrbisPad\include and \lib
if(EXISTS ${SDK_DIR}/OrbisPad)
	set(HAS_ORBISPAD TRUE)	
endif()

#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- cryinput_synergy.waf_files --
sources_platform(ANDROID DURANGO LINUX ORBIS)
add_sources("CryInput_synergy_uber.cpp"
	PROJECTS CryInput
	SOURCE_GROUP "Synergy"
		"Synergy/SynergyContext.cpp"
		"Synergy/SynergyKeyboard.cpp"
		"Synergy/SynergyMouse.cpp"
		"Synergy/SynergyContext.h"
		"Synergy/SynergyKeyboard.h"
		"Synergy/SynergyMouse.h"
)

# -- cryinput_durango.waf_files --
sources_platform(DURANGO)
add_sources("CryInput_durango_uber.cpp"
	PROJECTS CryInput
	SOURCE_GROUP "Durango"
		"DurangoInputDevice.cpp"
		"DurangoInputDevice.h"
		"DurangoInput.cpp"
		"DurangoInputKeyboard.cpp"
		"DurangoInput.h"
		"DurangoInputKeyboard.h"
	SOURCE_GROUP "Durango\\\\Kinect"
		"KinectAudioWinRT.h"
		"KinectAudioWinRT.cpp"
		"KinectInputWinRT.h"
		"KinectInputWinRT.cpp"
	SOURCE_GROUP "Kinect"
		"KinectInput.cpp"
		"KinectXboxSyncThread.cpp"
		"KinectInput.h"
		"KinectInputNULL.h"
		"KinectXboxSyncThread.h"
	SOURCE_GROUP "Kinect\\\\Filters"
		"Filters/JointFilter.cpp"
		"Filters/JointFilter.h"
)

# -- cryinput_orbis_shared.waf_files --
sources_platform(ORBIS WIN32 AND HAS_ORBISPAD)
add_sources("CryInput_orbis_shared_uber.cpp"
	PROJECTS CryInput
	SOURCE_GROUP "Orbis"
		"OrbisPad.cpp"
		"OrbisPad.h"
		"OrbisInputDevice.cpp"
		"OrbisInputDevice.h"
		"OrbisPadWin.cpp"
		"OrbisPadWin.h"
)

# -- cryinput_sdl.waf_files --
sources_platform(ANDROID LINUX)
add_sources("CryInput_sdl_uber.cpp"
	PROJECTS CryInput
	SOURCE_GROUP "Linux"
		"LinuxInput.cpp"
		"LinuxInput.h"
	SOURCE_GROUP "SDL"
		"SDLPad.cpp"
		"SDLPad.h"
		"SDLMouse.cpp"
		"SDLMouse.h"
		"SDLKeyboard.cpp"
		"SDLKeyboard.h"
)

# -- cryinput_orbis.waf_files --
sources_platform(ORBIS)
add_sources("CryInput_orbis_uber.cpp"
	PROJECTS CryInput
	SOURCE_GROUP "Orbis"
		"OrbisKeyboard.cpp"
		"OrbisKeyboard.h"
		"OrbisInput.cpp"
		"OrbisInput.h"
)

# -- cryinput.waf_files --
sources_platform(ALL)
add_sources("CryInput_uber.cpp"
	PROJECTS CryInput
	SOURCE_GROUP "EyeTracker"
		"EyeTrackerInput.cpp"
		"EyeTrackerInput.h"
	SOURCE_GROUP "Root"
		"CryInput.cpp"
		"CryInput.h"
		"InputCVars.cpp"
		"InputCVars.h"
		"resource.h"
	SOURCE_GROUP "Shared"
		"BaseInput.cpp"
		"InputDevice.cpp"
		"BaseInput.h"
		"InputDevice.h"
	SOURCE_GROUP "TrackIR"
		"NaturalPointInputNULL.h"
)

add_sources("NoUberFile"
	PROJECTS CryInput
	SOURCE_GROUP "Root"
		"StdAfx.cpp"
		"StdAfx.h"
)

# -- cryinput_dx.waf_files --
sources_platform(WIN32)
add_sources("CryInput_dx_uber.cpp"
	PROJECTS CryInput
	SOURCE_GROUP "DX"
		"XInputDevice.cpp"
		"XInputDevice.h"
		"DXInput.cpp"
		"DXInputDevice.cpp"
		"Keyboard.cpp"
		"Mouse.cpp"
		"DXInput.h"
		"DXInputDevice.h"
		"Keyboard.h"
		"Mouse.h"
)

end_sources()
#END-FILE-LIST

CryEngineModule(CryInput PCH "StdAfx.cpp" SOLUTION_FOLDER "CryEngine")

if (DURANGO)
	target_link_libraries( ${THIS_PROJECT} PRIVATE uuid ws2_32 )
	target_compile_options(${THIS_PROJECT} PRIVATE /EHsc /ZW)
elseif(APPLE)
	target_include_directories( ${THIS_PROJECT} PRIVATE "${SDK_DIR}/SDL2/include/mac" "${SDK_DIR}/SDL2/include/SDL" "${SDK_DIR}/SDL2/SDL@8112/include" )
elseif(ANDROID)
	target_include_directories( ${THIS_PROJECT} PRIVATE "${SDK_DIR}/SDL2/include/linux" "${SDK_DIR}/SDL2/include/SDL" )
	target_link_libraries(${THIS_PROJECT} PRIVATE SDL2)
elseif(LINUX)
	target_link_libraries(${THIS_PROJECT} PRIVATE SDL2)
elseif (WIN64 OR WIN32)
	target_link_libraries( ${THIS_PROJECT} PRIVATE dinput8 dxguid )
	if(HAS_ORBISPAD)
		target_compile_definitions( ${THIS_PROJECT} PRIVATE -DWANT_ORBISPAD_WIN )
		#TODO: Exclude files from CryInput_orbis_shared_uber.cpp
	endif()
endif()	
if (WIN64)
	 target_include_directories( ${THIS_PROJECT} PRIVATE "${SDK_DIR}/OrbisPad/include" )
endif()
