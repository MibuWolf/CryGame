#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- opengl_loader_gles2.waf_files --
sources_platform(ANDROID)
add_sources("NoUberFile"
	PROJECTS CryRenderOpenGL
	SOURCE_GROUP "DXGL\\\\Specification"
		"DXGL/Specification/glad_gles2.c"
		"DXGL/Specification/glad_gles2.h"
)

# -- durango_renderer.waf_files --
sources_platform(DURANGO)
add_sources("CryRenderer_uber_5_dur_dx11.cpp"
	PROJECTS CryRenderD3D11
	SOURCE_GROUP "DeviceManager\\\\D3D11"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.h"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.inl"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.cpp"
		"DeviceManager/D3D11/DeviceObjects_D3D11.inl"
		"DeviceManager/D3D11/DeviceObjects_D3D11.cpp"
		"DeviceManager/D3D11/DeviceResources_D3D11.inl"
		"DeviceManager/D3D11/DeviceResources_D3D11_NVAPI.h"
		"DeviceManager/D3D11/DeviceResources_D3D11_NVAPI.inl"
		"DeviceManager/D3D11/DeviceCommandList_D3D11.h"
		"DeviceManager/D3D11/DeviceWrapper_D3D11_Logging.cpp"
		"DeviceManager/D3D11/DeviceWrapper_D3D11_MemReplay.h"
		"DeviceManager/D3D11/DeviceWrapper_D3D11_MemReplay.cpp"
)

add_sources("CryRenderer_uber_5_dx11_dur.cpp"
	PROJECTS CryRenderD3D11
	SOURCE_GROUP "DeviceManager\\\\D3D11"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11_Durango.inl"
		"DeviceManager/D3D11/DeviceObjects_D3D11_Durango.h"
		"DeviceManager/D3D11/DeviceObjects_D3D11_Durango.cpp"
		"DeviceManager/D3D11/DeviceResources_D3D11_Durango.inl"
)

# -- opengl_loader_wgl.waf_files --
sources_platform(WIN32)
add_sources("NoUberFile"
	PROJECTS CryRenderOpenGL
	SOURCE_GROUP "DXGL\\\\Specification"
		"DXGL/Specification/glad_wgl.c"
		"DXGL/Specification/glad_wgl.h"
)

# -- opengl_loader_gl.waf_files --
sources_platform(LINUX WIN32)
add_sources("NoUberFile"
	PROJECTS CryRenderOpenGL
	SOURCE_GROUP "DXGL\\\\Specification"
		"DXGL/Specification/glad_gl.c"
		"DXGL/Specification/glad_gl.h"
)

# -- opengl_loader_glx.waf_files --
sources_platform(LINUX)
add_sources("NoUberFile"
	PROJECTS CryRenderOpenGL
	SOURCE_GROUP "DXGL\\\\Specification"
		"DXGL/Specification/glad_glx.c"
		"DXGL/Specification/glad_glx.h"
)

# -- opengl_renderer.waf_files --
sources_platform(ALL)
add_sources("CryRenderer_uber_5_ogl_dx11.cpp"
	PROJECTS CryRenderOpenGL
	SOURCE_GROUP "DeviceManager\\\\D3D11"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.h"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.inl"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.cpp"
		"DeviceManager/D3D11/DeviceObjects_D3D11.inl"
		"DeviceManager/D3D11/DeviceObjects_D3D11.cpp"
		"DeviceManager/D3D11/DeviceResources_D3D11.inl"
		"DeviceManager/D3D11/DeviceResources_D3D11_NVAPI.h"
		"DeviceManager/D3D11/DeviceResources_D3D11_NVAPI.inl"
		"DeviceManager/D3D11/DeviceCommandList_D3D11.h"
		"DeviceManager/D3D11/DeviceWrapper_D3D11_Logging.cpp"
		"DeviceManager/D3D11/DeviceWrapper_D3D11_MemReplay.h"
		"DeviceManager/D3D11/DeviceWrapper_D3D11_MemReplay.cpp"
)

add_sources("NoUberFile"
	PROJECTS CryRenderOpenGL
	SOURCE_GROUP "DXGL"
		"DXGL/CryDXGL.cpp"
		"DXGL/CryDXGL.hpp"
	SOURCE_GROUP "DXGL\\\\Definitions"
		"DXGL/Definitions/CryDXGLGuid.hpp"
		"DXGL/Definitions/CryDXGLLegacy.hpp"
		"DXGL/Definitions/CryDXGLMisc.hpp"
		"DXGL/Definitions/DXGL_D3D11.h"
		"DXGL/Definitions/DXGL_D3D11Shader.h"
		"DXGL/Definitions/DXGL_D3DCommon.h"
		"DXGL/Definitions/DXGL_D3DCompiler.h"
		"DXGL/Definitions/DXGL_D3DX11.h"
		"DXGL/Definitions/DXGL_D3DX11tex.h"
		"DXGL/Definitions/DXGL_DXGIFormat.h"
		"DXGL/Definitions/DXGL_ID3D11Device.h"
		"DXGL/Definitions/DXGL_ID3D11DeviceContext.h"
		"DXGL/Definitions/DXGL_IDXGIFactory1.h"
		"DXGL/Definitions/DXGL_IDXGISwapChain.h"
		"DXGL/Definitions/DXGL_dxgi.h"
		"DXGL/Definitions/DXGL_dxgitype.h"
		"DXGL/Definitions/ICryDXGLUnknown.hpp"
	SOURCE_GROUP "DXGL\\\\Implementation"
		"DXGL/Implementation/AppleGPUInfoUtils.h"
		"DXGL/Implementation/GLCommon.hpp"
		"DXGL/Implementation/GLContext.cpp"
		"DXGL/Implementation/GLContext.hpp"
		"DXGL/Implementation/GLCryPlatform.hpp"
		"DXGL/Implementation/GLDevice.cpp"
		"DXGL/Implementation/GLDevice.hpp"
		"DXGL/Implementation/GLFeatures.hpp"
		"DXGL/Implementation/GLFormat.cpp"
		"DXGL/Implementation/GLFormat.hpp"
		"DXGL/Implementation/GLInstrument.hpp"
		"DXGL/Implementation/GLPlatform.hpp"
		"DXGL/Implementation/GLResource.cpp"
		"DXGL/Implementation/GLResource.hpp"
		"DXGL/Implementation/GLShader.cpp"
		"DXGL/Implementation/GLShader.hpp"
		"DXGL/Implementation/GLState.cpp"
		"DXGL/Implementation/GLState.hpp"
		"DXGL/Implementation/GLView.cpp"
		"DXGL/Implementation/GLView.hpp"
	SOURCE_GROUP "DXGL\\\\Interfaces"
		"DXGL/Interfaces/CCryDXGLBase.cpp"
		"DXGL/Interfaces/CCryDXGLBase.hpp"
		"DXGL/Interfaces/CCryDXGLBlendState.cpp"
		"DXGL/Interfaces/CCryDXGLBlendState.hpp"
		"DXGL/Interfaces/CCryDXGLBlob.cpp"
		"DXGL/Interfaces/CCryDXGLBlob.hpp"
		"DXGL/Interfaces/CCryDXGLBuffer.cpp"
		"DXGL/Interfaces/CCryDXGLBuffer.hpp"
		"DXGL/Interfaces/CCryDXGLDepthStencilState.cpp"
		"DXGL/Interfaces/CCryDXGLDepthStencilState.hpp"
		"DXGL/Interfaces/CCryDXGLDepthStencilView.cpp"
		"DXGL/Interfaces/CCryDXGLDepthStencilView.hpp"
		"DXGL/Interfaces/CCryDXGLDevice.cpp"
		"DXGL/Interfaces/CCryDXGLDevice.hpp"
		"DXGL/Interfaces/CCryDXGLDeviceChild.cpp"
		"DXGL/Interfaces/CCryDXGLDeviceChild.hpp"
		"DXGL/Interfaces/CCryDXGLDeviceContext.cpp"
		"DXGL/Interfaces/CCryDXGLDeviceContext.hpp"
		"DXGL/Interfaces/CCryDXGLGIAdapter.cpp"
		"DXGL/Interfaces/CCryDXGLGIAdapter.hpp"
		"DXGL/Interfaces/CCryDXGLGIFactory.cpp"
		"DXGL/Interfaces/CCryDXGLGIFactory.hpp"
		"DXGL/Interfaces/CCryDXGLGIObject.cpp"
		"DXGL/Interfaces/CCryDXGLGIObject.hpp"
		"DXGL/Interfaces/CCryDXGLGIOutput.cpp"
		"DXGL/Interfaces/CCryDXGLGIOutput.hpp"
		"DXGL/Interfaces/CCryDXGLInputLayout.cpp"
		"DXGL/Interfaces/CCryDXGLInputLayout.hpp"
		"DXGL/Interfaces/CCryDXGLQuery.cpp"
		"DXGL/Interfaces/CCryDXGLQuery.hpp"
		"DXGL/Interfaces/CCryDXGLRasterizerState.cpp"
		"DXGL/Interfaces/CCryDXGLRasterizerState.hpp"
		"DXGL/Interfaces/CCryDXGLRenderTargetView.cpp"
		"DXGL/Interfaces/CCryDXGLRenderTargetView.hpp"
		"DXGL/Interfaces/CCryDXGLResource.cpp"
		"DXGL/Interfaces/CCryDXGLResource.hpp"
		"DXGL/Interfaces/CCryDXGLSamplerState.cpp"
		"DXGL/Interfaces/CCryDXGLSamplerState.hpp"
		"DXGL/Interfaces/CCryDXGLShader.cpp"
		"DXGL/Interfaces/CCryDXGLShader.hpp"
		"DXGL/Interfaces/CCryDXGLShaderReflection.cpp"
		"DXGL/Interfaces/CCryDXGLShaderReflection.hpp"
		"DXGL/Interfaces/CCryDXGLShaderResourceView.cpp"
		"DXGL/Interfaces/CCryDXGLShaderResourceView.hpp"
		"DXGL/Interfaces/CCryDXGLSwapChain.cpp"
		"DXGL/Interfaces/CCryDXGLSwapChain.hpp"
		"DXGL/Interfaces/CCryDXGLSwitchToRef.cpp"
		"DXGL/Interfaces/CCryDXGLSwitchToRef.hpp"
		"DXGL/Interfaces/CCryDXGLTexture1D.cpp"
		"DXGL/Interfaces/CCryDXGLTexture1D.hpp"
		"DXGL/Interfaces/CCryDXGLTexture2D.cpp"
		"DXGL/Interfaces/CCryDXGLTexture2D.hpp"
		"DXGL/Interfaces/CCryDXGLTexture3D.cpp"
		"DXGL/Interfaces/CCryDXGLTexture3D.hpp"
		"DXGL/Interfaces/CCryDXGLTextureBase.cpp"
		"DXGL/Interfaces/CCryDXGLTextureBase.hpp"
		"DXGL/Interfaces/CCryDXGLUnorderedAccessView.cpp"
		"DXGL/Interfaces/CCryDXGLUnorderedAccessView.hpp"
		"DXGL/Interfaces/CCryDXGLView.cpp"
		"DXGL/Interfaces/CCryDXGLView.hpp"
		"DXGL/Interfaces/DXEmulation.hpp"
	SOURCE_GROUP "Mac"
		"DXGL/Implementation/AppleGPUInfoUtils.mm"
)

# -- dx12_renderer.waf_files --
sources_platform(ALL)
add_sources("CryRenderer_uber_5_dx12_dx11.cpp"
	PROJECTS CryRenderD3D12
	SOURCE_GROUP "DeviceManager\\\\D3D11"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.h"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.inl"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.cpp"
)

add_sources("CryRenderer_uber_5_dx12_dx12.cpp"
	PROJECTS CryRenderD3D12
	SOURCE_GROUP "DeviceManager\\\\D3D12"
		"DeviceManager/D3D12/DeviceObjects_D3D12.inl"
		"DeviceManager/D3D12/DeviceObjects_D3D12.cpp"
		"DeviceManager/D3D12/DeviceResources_D3D12.inl"
		"DeviceManager/D3D12/DeviceCommandList_D3D12.h"
)

add_sources("NoUberFile"
	PROJECTS CryRenderD3D12
	SOURCE_GROUP "DX12"
		"DX12/CCryDX12Object.cpp"
		"DX12/CCryDX12Object.hpp"
		"DX12/CryDX12.cpp"
		"DX12/CryDX12.hpp"
		"DX12/CryDX12Guid.hpp"
	SOURCE_GROUP "DX12\\\\3rdParty"
		"DX12/Includes/d3d11TokenizedProgramFormat.hpp"
		"DX12/Includes/d3dx12.h"
	SOURCE_GROUP "DX12\\\\API"
		"DX12/API/DX12Base.cpp"
		"DX12/API/DX12CommandScheduler.cpp"
		"DX12/API/DX12CommandList.cpp"
		"DX12/API/DX12CommandListFence.cpp"
		"DX12/API/DX12DescriptorHeap.cpp"
		"DX12/API/DX12QueryHeap.cpp"
		"DX12/API/DX12Device.cpp"
		"DX12/API/DX12PSO.cpp"
		"DX12/API/DX12Resource.cpp"
		"DX12/API/DX12RootSignature.cpp"
		"DX12/API/DX12Shader.cpp"
		"DX12/API/DX12View.cpp"
		"DX12/API/DX12SamplerState.cpp"
		"DX12/API/DX12SwapChain.cpp"
		"DX12/API/DX12Base.hpp"
		"DX12/API/DX12CommandScheduler.hpp"
		"DX12/API/DX12CommandList.hpp"
		"DX12/API/DX12CommandListFence.hpp"
		"DX12/API/DX12DescriptorHeap.hpp"
		"DX12/API/DX12QueryHeap.hpp"
		"DX12/API/DX12Device.hpp"
		"DX12/API/DX12PSO.hpp"
		"DX12/API/DX12Resource.hpp"
		"DX12/API/DX12RootSignature.hpp"
		"DX12/API/DX12Shader.hpp"
		"DX12/API/DX12View.hpp"
		"DX12/API/DX12SamplerState.hpp"
		"DX12/API/DX12SwapChain.hpp"
		"DX12/API/DX12AsyncCommandQueue.hpp"
		"DX12/API/DX12AsyncCommandQueue.cpp"
	SOURCE_GROUP "DX12\\\\API\\\\Redirections"
		"DX12/API/Redirections/D3D12Device.inl"
		"DX12/API/Redirections/D3D12CommandAllocator.inl"
		"DX12/API/Redirections/D3D12CommandQueue.inl"
		"DX12/API/Redirections/D3D12GraphicsCommandList.inl"
		"DX12/API/Redirections/D3D12DescriptorHeap.inl"
		"DX12/API/Redirections/D3D12QueryHeap.inl"
		"DX12/API/Redirections/D3D12Heap.inl"
		"DX12/API/Redirections/D3D12Fence.inl"
		"DX12/API/Redirections/D3D12Resource.inl"
	SOURCE_GROUP "DX12\\\\Device"
		"DX12/Device/CCryDX12Device.cpp"
		"DX12/Device/CCryDX12DeviceChild.cpp"
		"DX12/Device/CCryDX12DeviceContext.cpp"
		"DX12/Device/CCryDX12Device.hpp"
		"DX12/Device/CCryDX12DeviceChild.hpp"
		"DX12/Device/CCryDX12DeviceContext.hpp"
	SOURCE_GROUP "DX12\\\\GI"
		"DX12/GI/CCryDX12GIAdapter.cpp"
		"DX12/GI/CCryDX12GIDevice.cpp"
		"DX12/GI/CCryDX12GIFactory.cpp"
		"DX12/GI/CCryDX12GIOutput.cpp"
		"DX12/GI/CCryDX12SwapChain.cpp"
		"DX12/GI/CCryDX12GIAdapter.hpp"
		"DX12/GI/CCryDX12GIDevice.hpp"
		"DX12/GI/CCryDX12GIFactory.hpp"
		"DX12/GI/CCryDX12GIOutput.hpp"
		"DX12/GI/CCryDX12SwapChain.hpp"
	SOURCE_GROUP "DX12\\\\Misc"
		"DX12/Misc/SCryDX11PipelineState.cpp"
		"DX12/Misc/SCryDX11PipelineState.hpp"
	SOURCE_GROUP "DX12\\\\Resource"
		"DX12/Resource/CCryDX12Asynchronous.cpp"
		"DX12/Resource/CCryDX12Resource.cpp"
		"DX12/Resource/CCryDX12View.cpp"
		"DX12/Resource/CCryDX12Asynchronous.hpp"
		"DX12/Resource/CCryDX12Resource.hpp"
		"DX12/Resource/CCryDX12View.hpp"
	SOURCE_GROUP "DX12\\\\Resource\\\\Misc"
		"DX12/Resource/Misc/CCryDX12Buffer.cpp"
		"DX12/Resource/Misc/CCryDX12InputLayout.cpp"
		"DX12/Resource/Misc/CCryDX12Query.cpp"
		"DX12/Resource/Misc/CCryDX12Shader.cpp"
		"DX12/Resource/Misc/CCryDX12Buffer.hpp"
		"DX12/Resource/Misc/CCryDX12InputLayout.hpp"
		"DX12/Resource/Misc/CCryDX12Query.hpp"
		"DX12/Resource/Misc/CCryDX12Shader.hpp"
	SOURCE_GROUP "DX12\\\\Resource\\\\State"
		"DX12/Resource/State/CCryDX12BlendState.cpp"
		"DX12/Resource/State/CCryDX12DepthStencilState.cpp"
		"DX12/Resource/State/CCryDX12RasterizerState.cpp"
		"DX12/Resource/State/CCryDX12SamplerState.cpp"
		"DX12/Resource/State/CCryDX12BlendState.hpp"
		"DX12/Resource/State/CCryDX12DepthStencilState.hpp"
		"DX12/Resource/State/CCryDX12RasterizerState.hpp"
		"DX12/Resource/State/CCryDX12SamplerState.hpp"
	SOURCE_GROUP "DX12\\\\Resource\\\\Texture"
		"DX12/Resource/Texture/CCryDX12Texture1D.cpp"
		"DX12/Resource/Texture/CCryDX12Texture2D.cpp"
		"DX12/Resource/Texture/CCryDX12Texture3D.cpp"
		"DX12/Resource/Texture/CCryDX12TextureBase.cpp"
		"DX12/Resource/Texture/CCryDX12Texture1D.hpp"
		"DX12/Resource/Texture/CCryDX12Texture2D.hpp"
		"DX12/Resource/Texture/CCryDX12Texture3D.hpp"
		"DX12/Resource/Texture/CCryDX12TextureBase.hpp"
	SOURCE_GROUP "DX12\\\\Resource\\\\View"
		"DX12/Resource/View/CCryDX12DepthStencilView.cpp"
		"DX12/Resource/View/CCryDX12RenderTargetView.cpp"
		"DX12/Resource/View/CCryDX12ShaderResourceView.cpp"
		"DX12/Resource/View/CCryDX12UnorderedAccessView.cpp"
		"DX12/Resource/View/CCryDX12DepthStencilView.hpp"
		"DX12/Resource/View/CCryDX12RenderTargetView.hpp"
		"DX12/Resource/View/CCryDX12ShaderResourceView.hpp"
		"DX12/Resource/View/CCryDX12UnorderedAccessView.hpp"
)

# -- orbis_renderer.waf_files --
sources_platform(ORBIS)
add_sources("CryRenderer_dx_orbis_uber_0.cpp"
	PROJECTS CryRenderD3D11
	SOURCE_GROUP "DXOrbis"
		"DXOrbis/CCryDXOrbisRenderer.cpp"
		"DXOrbis/CCryDXOrbisAPtr.hpp"
		"DXOrbis/CCryDXOrbisDummy.hpp"
		"DXOrbis/CCryDXOrbisGuid.hpp"
		"DXOrbis/CCryDXOrbisMisc.hpp"
		"DXOrbis/CCryDXOrbisMisc9.hpp"
		"DXOrbis/CCryDXOrbisRenderDeviceWrapper.hpp"
		"DXOrbis/CCryDXOrbisRenderer.hpp"
		"DXOrbis/CCryTypes.hpp"
	SOURCE_GROUP "DXOrbis\\\\Device"
		"DXOrbis/Device/CCryDXOrbisRenderDevice.cpp"
		"DXOrbis/Device/CCryDXOrbisShaderState_CUE.cpp"
		"DXOrbis/Device/CCryDXOrbisShaderState_SCUE.cpp"
		"DXOrbis/Device/CCryDXOrbisSwapChain.cpp"
		"DXOrbis/Device/CCryDXOrbisRenderDevice.hpp"
		"DXOrbis/Device/CCryDXOrbisShaderState.hpp"
		"DXOrbis/Device/CCryDXOrbisShaderState_CUE.h"
		"DXOrbis/Device/CCryDXOrbisShaderState_SCUE.h"
		"DXOrbis/Device/CCryDXOrbisSwapChain.hpp"
	SOURCE_GROUP "DXOrbis\\\\Device\\\\Resources"
		"DXOrbis/Device/Resource/CCryDXOrbisResource.cpp"
		"DXOrbis/Device/Resource/CCryDXOrbisResource.hpp"
	SOURCE_GROUP "DXOrbis\\\\Device\\\\Resources\\\\Buffer"
		"DXOrbis/Device/Resource/Buffer/CCryDXOrbisBuffer.cpp"
		"DXOrbis/Device/Resource/Buffer/CCryDXOrbisBuffer.hpp"
	SOURCE_GROUP "DXOrbis\\\\Device\\\\Resources\\\\Misc"
		"DXOrbis/Device/CCryDXOrbisBlob.cpp"
		"DXOrbis/Device/Resource/Misc/CCryDXOrbisDepthStencilView.cpp"
		"DXOrbis/Device/Resource/Misc/CCryDXOrbisInputLayout.cpp"
		"DXOrbis/Device/Resource/Misc/CCryDXOrbisRenderTargetView.cpp"
		"DXOrbis/Device/CCryDXOrbisBlob.hpp"
		"DXOrbis/Device/Resource/Misc/CCryDXOrbisDepthStencilView.hpp"
		"DXOrbis/Device/Resource/Misc/CCryDXOrbisInputLayout.hpp"
		"DXOrbis/Device/Resource/Misc/CCryDXOrbisRenderTargetView.hpp"
	SOURCE_GROUP "DXOrbis\\\\Device\\\\Resources\\\\States"
		"DXOrbis/Device/Resource/States/CCryDXOrbisBlendState.cpp"
		"DXOrbis/Device/Resource/States/CCryDXOrbisDepthStencilState.cpp"
		"DXOrbis/Device/Resource/States/CCryDXOrbisRasterizerState.cpp"
		"DXOrbis/Device/Resource/States/CCryDXOrbisSamplerState.cpp"
		"DXOrbis/Device/Resource/States/CCryDXOrbisSamplerState.hpp"
		"DXOrbis/Device/Resource/States/CCryDXOrbisBlendState.hpp"
		"DXOrbis/Device/Resource/States/CCryDXOrbisDepthStencilState.hpp"
		"DXOrbis/Device/Resource/States/CCryDXOrbisRasterizerState.hpp"
)

add_sources("CryRenderer_dx_orbis_uber_1.cpp"
	PROJECTS CryRenderD3D11
	SOURCE_GROUP "DXOrbis\\\\DXOrbisGI"
		"DXOrbis/DXOrbisGI/CCryDXOrbisGI.cpp"
		"DXOrbis/DXOrbisGI/CCryDXOrbisGIAdapter.cpp"
		"DXOrbis/DXOrbisGI/CCryDXOrbisGIDevice.cpp"
		"DXOrbis/DXOrbisGI/CCryDXOrbisGIFactory.cpp"
		"DXOrbis/DXOrbisGI/CCryDXOrbisGIOutput.cpp"
		"DXOrbis/DXOrbisGI/CCryDXOrbisGI.hpp"
		"DXOrbis/DXOrbisGI/CCryDXOrbisGIAdapter.hpp"
		"DXOrbis/DXOrbisGI/CCryDXOrbisGIDevice.hpp"
		"DXOrbis/DXOrbisGI/CCryDXOrbisGIFactory.hpp"
		"DXOrbis/DXOrbisGI/CCryDXOrbisGIOutput.hpp"
	SOURCE_GROUP "DXOrbis\\\\Debug"
		"DXOrbis/Debug/SouthernIslandsISA.cpp"
		"DXOrbis/Debug/SouthernIslandsISA.h"
	SOURCE_GROUP "DXOrbis\\\\Device\\\\Resources\\\\Shaders"
		"DXOrbis/Device/Resource/Misc/CCryDXOrbisShader.cpp"
		"DXOrbis/Device/Resource/Misc/CCryDXOrbisShaderReflection.cpp"
		"DXOrbis/Device/Resource/Misc/CCryDXOrbisShaderResourceView.cpp"
		"DXOrbis/Device/Resource/Misc/CCryDXOrbisShader.hpp"
		"DXOrbis/Device/Resource/Misc/CCryDXOrbisShaderReflection.hpp"
		"DXOrbis/Device/Resource/Misc/CCryDXOrbisShaderResourceView.hpp"
	SOURCE_GROUP "DXOrbis\\\\Device\\\\Resources\\\\Textures"
		"DXOrbis/Device/Resource/Textures/CCryDXOrbisTexture1D.cpp"
		"DXOrbis/Device/Resource/Textures/CCryDXOrbisTexture2D.cpp"
		"DXOrbis/Device/Resource/Textures/CCryDXOrbisTexture3D.cpp"
		"DXOrbis/Device/Resource/Textures/CCryDXOrbisTextureBase.cpp"
		"DXOrbis/Device/Resource/Textures/CCryDXOrbisTexture1D.hpp"
		"DXOrbis/Device/Resource/Textures/CCryDXOrbisTexture2D.hpp"
		"DXOrbis/Device/Resource/Textures/CCryDXOrbisTexture3D.hpp"
		"DXOrbis/Device/Resource/Textures/CCryDXOrbisTextureBase.hpp"
	SOURCE_GROUP "DXOrbis\\\\Device\\\\SCUE"
		"DXOrbis/Device/SCUE/scue.cpp"
		"DXOrbis/Device/SCUE/scue.h"
	SOURCE_GROUP "DXOrbis\\\\Layer0"
		"DXOrbis/Layer0/CCryDXOrbisGNM.cpp"
		"DXOrbis/Layer0/CCryDXOrbis.hpp"
		"DXOrbis/Layer0/CCryDXOrbisGNM.hpp"
		"DXOrbis/Layer0/CCryDXOrbis_Orbis.hpp"
)

add_sources("CryRenderer_uber_5_orb_dx11.cpp"
	PROJECTS CryRenderD3D11
	SOURCE_GROUP "DeviceManager\\\\D3D11"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.h"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.inl"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.cpp"
		"DeviceManager/D3D11/DeviceObjects_D3D11.inl"
		"DeviceManager/D3D11/DeviceObjects_D3D11.cpp"
		"DeviceManager/D3D11/DeviceResources_D3D11.inl"
		"DeviceManager/D3D11/DeviceResources_D3D11_NVAPI.h"
		"DeviceManager/D3D11/DeviceResources_D3D11_NVAPI.inl"
		"DeviceManager/D3D11/DeviceCommandList_D3D11.h"
		"DeviceManager/D3D11/DeviceWrapper_D3D11_Logging.cpp"
		"DeviceManager/D3D11/DeviceWrapper_D3D11_MemReplay.h"
		"DeviceManager/D3D11/DeviceWrapper_D3D11_MemReplay.cpp"
)

# -- dx11_renderer.waf_files --
sources_platform(WIN32)
add_sources("CryRenderer_uber_5_dx11_dx11.cpp"
	PROJECTS CryRenderD3D11
	SOURCE_GROUP "DeviceManager\\\\D3D11"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.h"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.inl"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.cpp"
		"DeviceManager/D3D11/DeviceObjects_D3D11.inl"
		"DeviceManager/D3D11/DeviceObjects_D3D11.cpp"
		"DeviceManager/D3D11/DeviceResources_D3D11.inl"
		"DeviceManager/D3D11/DeviceResources_D3D11_NVAPI.h"
		"DeviceManager/D3D11/DeviceResources_D3D11_NVAPI.inl"
		"DeviceManager/D3D11/DeviceCommandList_D3D11.h"
		"DeviceManager/D3D11/DeviceWrapper_D3D11_Logging.cpp"
		"DeviceManager/D3D11/DeviceWrapper_D3D11_MemReplay.h"
		"DeviceManager/D3D11/DeviceWrapper_D3D11_MemReplay.cpp"
)

# -- GNM/GnmRenderer.waf_files --
sources_platform(ALL)
add_sources("NoUberFile"
	PROJECTS CryRenderGNM
	SOURCE_GROUP "Common"
		"GpuHeap.h"
		"GpuHeap.cpp"
		"GpuHeap.natvis"
	SOURCE_GROUP "DeviceManager\\\\GNM"
		"DeviceManager/GNM/DeviceCommandList_GNM.h"
		"DeviceManager/GNM/DeviceCommandList_GNM.inl"
		"DeviceManager/GNM/DeviceResources_GNM.inl"
		"DeviceManager/GNM/DeviceObjects_GNM.inl"
		"DeviceManager/GNM/DeviceObjects_GNM.cpp"
	SOURCE_GROUP "GNM"
		"GNM/GnmBase.hpp"
		"GNM/GnmBuffer.hpp"
		"GNM/GnmBuffer.cpp"
		"GNM/GnmBuiltIn.hpp"
		"GNM/GnmCache.hpp"
		"GNM/GnmCache.cpp"
		"GNM/GnmCommandList.hpp"
		"GNM/GnmCommandList.cpp"
		"GNM/GnmCommon.hpp"
		"GNM/GnmCommon.cpp"
		"GNM/GnmDebugHelpers.natvis"
		"GNM/GnmDevice.hpp"
		"GNM/GnmDevice.cpp"
		"GNM/GnmGpuState.hpp"
		"GNM/GnmGpuState.cpp"
		"GNM/GnmHeap.hpp"
		"GNM/GnmHeap.cpp"
		"GNM/GnmLegacy.hpp"
		"GNM/GnmLegacy.cpp"
		"GNM/GnmPipelineState.hpp"
		"GNM/GnmPipelineState.cpp"
		"GNM/GnmQuery.hpp"
		"GNM/GnmReflection.hpp"
		"GNM/GnmReflection.cpp"
		"GNM/GnmRenderer.hpp"
		"GNM/GnmResource.hpp"
		"GNM/GnmResourceLayout.hpp"
		"GNM/GnmResourceLayout.cpp"
		"GNM/GnmResourceLookup.hpp"
		"GNM/GnmResourceSet.hpp"
		"GNM/GnmResourceSet.cpp"
		"GNM/GnmSampler.hpp"
		"GNM/GnmSampler.cpp"
		"GNM/GnmScratch.hpp"
		"GNM/GnmScratch.cpp"
		"GNM/GnmShader.hpp"
		"GNM/GnmShaderCompiler.hpp"
		"GNM/GnmShaderLoader.cpp"
		"GNM/GnmShaderRuntime.cpp"
		"GNM/GnmShaderTools.hpp"
		"GNM/GnmSwapChain.hpp"
		"GNM/GnmSwapChain.cpp"
		"GNM/GnmTexture.hpp"
		"GNM/GnmTexture.cpp"
)

# -- opengl_loader_egl.waf_files --
sources_platform(ANDROID)
add_sources("NoUberFile"
	PROJECTS CryRenderOpenGL
	SOURCE_GROUP "DXGL\\\\Specification"
		"DXGL/Specification/glad_egl.c"
		"DXGL/Specification/glad_egl.h"
)

# -- mesh_baker.waf_files --
sources_platform(ANDROID APPLE DURANGO LINUX WIN32)
add_sources("NoUberFile"
	PROJECTS CryRenderD3D11 CryRenderD3D12 CryRenderVulkan CryRenderOpenGL
	SOURCE_GROUP "Source Files"
		"D3DMeshBaker.cpp"
)

# -- Vulkan/vulkan_renderer.waf_files --
sources_platform(ALL)
add_sources("CryRenderer_uber_5_vulkan_dx11.cpp"
	PROJECTS CryRenderVulkan
	SOURCE_GROUP "DeviceManager\\\\D3D11"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.h"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.inl"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.cpp"
)

add_sources("CryRenderer_uber_5_vulkan_vulkan.cpp"
	PROJECTS CryRenderVulkan
	SOURCE_GROUP "DeviceManager\\\\Vulkan"
		"DeviceManager/Vulkan/DeviceObjects_Vulkan.inl"
		"DeviceManager/Vulkan/DeviceObjects_Vulkan.cpp"
		"DeviceManager/Vulkan/DeviceResources_Vulkan.inl"
		"DeviceManager/Vulkan/DeviceCommandList_Vulkan.h"
)

add_sources("NoUberFile"
	PROJECTS CryRenderVulkan
	SOURCE_GROUP "Common"
		"GpuHeap.h"
		"GpuHeap.cpp"
		"GpuHeap.natvis"
	SOURCE_GROUP "Vulkan"
		"Vulkan/CryVulkan.hpp"
		"Vulkan/CryVulkan.cpp"
		"Vulkan/D3DVKConversionUtility.hpp"
	SOURCE_GROUP "Vulkan\\\\API"
		"Vulkan/API/VKCommandScheduler.cpp"
		"Vulkan/API/VKCommandScheduler.hpp"
		"Vulkan/API/VKCommandList.cpp"
		"Vulkan/API/VKCommandList.hpp"
		"Vulkan/API/VKCommandListFence.cpp"
		"Vulkan/API/VKCommandListFence.hpp"
		"Vulkan/API/VKAsyncCommandQueue.hpp"
		"Vulkan/API/VKAsyncCommandQueue.cpp"
		"Vulkan/API/VKBase.hpp"
		"Vulkan/API/VKBase.cpp"
		"Vulkan/API/VKDevice.hpp"
		"Vulkan/API/VKDevice.cpp"
		"Vulkan/API/VKInstance.hpp"
		"Vulkan/API/VKInstance.cpp"
		"Vulkan/API/VKSwapChain.hpp"
		"Vulkan/API/VKSwapChain.cpp"
		"Vulkan/API/VKImageResource.hpp"
		"Vulkan/API/VKImageResource.cpp"
		"Vulkan/API/VKHeap.hpp"
		"Vulkan/API/VKHeap.cpp"
		"Vulkan/API/VKBufferResource.hpp"
		"Vulkan/API/VKBufferResource.cpp"
		"Vulkan/API/VKMemoryResource.hpp"
		"Vulkan/API/VKMemoryResource.cpp"
		"Vulkan/API/VKLegacyToBeRemoved.cpp"
		"Vulkan/API/VKShader.hpp"
		"Vulkan/API/VKShader.cpp"
		"Vulkan/API/VKSampler.hpp"
		"Vulkan/API/VKSampler.cpp"
		"Vulkan/API/VKResourceView.hpp"
		"Vulkan/API/VKResourceView.cpp"
		"Vulkan/API/VKExtensions.hpp"
		"Vulkan/API/VKExtensions.cpp"
		"Vulkan/API/VKOcclusionQueryManager.hpp"
		"Vulkan/API/VKOcclusionQueryManager.cpp"
	SOURCE_GROUP "Vulkan\\\\CryVulkanWrappers\\\\GI"
		"Vulkan/CryVulkanWrappers/GI/CCryVKGuid.hpp"
		"Vulkan/CryVulkanWrappers/GI/CCryVKMisc.hpp"
		"Vulkan/CryVulkanWrappers/GI/CCryVKGIObject.hpp"
		"Vulkan/CryVulkanWrappers/GI/CCryVKGIAdapter.hpp"
		"Vulkan/CryVulkanWrappers/GI/CCryVKGIAdapter.cpp"
		"Vulkan/CryVulkanWrappers/GI/CCryVKGIFactory.hpp"
		"Vulkan/CryVulkanWrappers/GI/CCryVKGIFactory.cpp"
		"Vulkan/CryVulkanWrappers/GI/CCryVKGIOutput.hpp"
		"Vulkan/CryVulkanWrappers/GI/CCryVKGIOutput.cpp"
		"Vulkan/CryVulkanWrappers/GI/CCryVKSwapChain.hpp"
		"Vulkan/CryVulkanWrappers/GI/CCryVKSwapChain.cpp"
	SOURCE_GROUP "Vulkan\\\\CryVulkanWrappers\\\\Resources"
		"Vulkan/CryVulkanWrappers/Resources/CCryVKShaderReflection.hpp"
		"Vulkan/CryVulkanWrappers/Resources/CCryVKShaderReflection.cpp"
)

sources_platform(WIN32)
add_sources("CryRenderer_uber_5_vulkan_dxgi.cpp"
	PROJECTS CryRenderVulkan
	SOURCE_GROUP "Vulkan\\\\CryVulkanWrappers\\\\GI\\\\DXGI"
		"Vulkan/CryVulkanWrappers/GI/DXGI/CCryVKGIFactory_DXGI.hpp"
		"Vulkan/CryVulkanWrappers/GI/DXGI/CCryVKGIFactory_DXGI.cpp"
		"Vulkan/CryVulkanWrappers/GI/DXGI/CCryVKGIAdapter_DXGI.hpp"
		"Vulkan/CryVulkanWrappers/GI/DXGI/CCryVKGIAdapter_DXGI.cpp"
		"Vulkan/CryVulkanWrappers/GI/DXGI/CCryVKGIOutput_DXGI.hpp"
		"Vulkan/CryVulkanWrappers/GI/DXGI/CCryVKGIOutput_DXGI.cpp"
)
	
# -- core_renderer.waf_files --
sources_platform(ALL)
add_sources("CryGpuParticles_uber.cpp"
	PROJECTS CryRenderGNM CryRenderD3D11 CryRenderD3D12 CryRenderVulkan CryRenderOpenGL
	SOURCE_GROUP "Header Files\\\\Gpu"
		"Gpu/GpuComputeBackend.h"
		"Gpu/GpuBitonicSort.h"
	SOURCE_GROUP "Header Files\\\\Gpu\\\\Particles"
		"Gpu/Particles/GpuParticleComponentRuntime.h"
		"Gpu/Particles/GpuParticleManager.h"
		"Gpu/Particles/GpuParticleContainer.h"
		"Gpu/Particles/GpuParticleFeatureBase.h"
		"Gpu/Particles/GpuParticleFeatureFactory.h"
		"Gpu/Particles/GpuParticleFeatureColor.h"
		"Gpu/Particles/GpuParticleFeatureCollision.h"
		"Gpu/Particles/GpuParticleFeatureField.h"
		"Gpu/Particles/GpuParticleFeatureLifeTime.h"
		"Gpu/Particles/GpuParticleFeatureLocation.h"
		"Gpu/Particles/GpuParticleFeatureMotion.h"
		"Gpu/Particles/GpuParticleFeatureFluidDynamics.h"
		"Gpu/Particles/GpuParticleFeatureRender.h"
		"Gpu/Particles/GpuParticleFeatureSpawn.h"
		"Gpu/Particles/GpuParticleFeatureVelocity.h"
	SOURCE_GROUP "Header Files\\\\Gpu\\\\Physics"
		"Gpu/Physics/GpuPhysicsParticleFluid.h"
	SOURCE_GROUP "Source Files\\\\Gpu"
		"Gpu/GpuComputeBackend.cpp"
		"Gpu/GpuBitonicSort.cpp"
		"Gpu/GpuMergeSort.cpp"
	SOURCE_GROUP "Source Files\\\\Gpu\\\\Particles"
		"Gpu/Particles/GpuParticleComponentRuntime.cpp"
		"Gpu/Particles/GpuParticleManager.cpp"
		"Gpu/Particles/GpuParticleContainer.cpp"
		"Gpu/Particles/GpuParticleFeatureFactory.cpp"
		"Gpu/Particles/GpuParticleFeatureColor.cpp"
		"Gpu/Particles/GpuParticleFeatureCollision.cpp"
		"Gpu/Particles/GpuParticleFeatureField.cpp"
		"Gpu/Particles/GpuParticleFeatureLifeTime.cpp"
		"Gpu/Particles/GpuParticleFeatureLocation.cpp"
		"Gpu/Particles/GpuParticleFeatureMotion.cpp"
		"Gpu/Particles/GpuParticleFeatureFluidDynamics.cpp"
		"Gpu/Particles/GpuParticleFeatureRender.cpp"
		"Gpu/Particles/GpuParticleFeatureSpawn.cpp"
		"Gpu/Particles/GpuParticleFeatureVelocity.cpp"
	SOURCE_GROUP "Source Files\\\\Gpu\\\\Physics"
		"Gpu/Physics/GpuPhysicsParticleFluid.cpp"
)

add_sources("CryRender_resfile_uber.cpp"
	PROJECTS CryRenderGNM CryRenderD3D11 CryRenderD3D12 CryRenderVulkan CryRenderOpenGL
	SOURCE_GROUP "Common"
		"../Common/ResFile.cpp"
		"../Common/ResFileLookupDataMan.cpp"
	SOURCE_GROUP "Common_h"
		"../Common/ResFile.h"
		"../Common/ResFile_info.h"
		"../Common/ResFileLookupDataMan.h"
)

add_sources("CryRenderer_render_elements_uber_0.cpp"
	PROJECTS CryRenderGNM CryRenderD3D11 CryRenderD3D12 CryRenderVulkan CryRenderOpenGL
	SOURCE_GROUP "Common\\\\RendElements"
		"../Common/RendElements/CREBreakableGlass.cpp"
		"CRELensOpticsD3D.cpp"
		"../Common/RendElements/CREClientPoly.cpp"
		"../Common/RendElements/CREDeferredShading.cpp"
		"../Common/RendElements/CREFarTreeSprites.cpp"
		"../Common/RendElements/CREFogVolume.cpp"
		"../Common/RendElements/CREGameEffect.cpp"
		"../Common/RendElements/CREMesh.cpp"
		"../Common/RendElements/CREOclusionQuery.cpp"
		"../Common/RendElements/CREGeomCache.cpp"
)

add_sources("CryRenderer_render_elements_uber_1.cpp"
	PROJECTS CryRenderGNM CryRenderD3D11 CryRenderD3D12 CryRenderVulkan CryRenderOpenGL
	SOURCE_GROUP "Common\\\\RendElements"
		"../Common/RendElements/CREParticle.cpp"
		"../Common/RendElements/CRESky.cpp"
		"../Common/RendElements/CREWaterOcean.cpp"
		"../Common/RendElements/CREWaterVolume.cpp"
		"../Common/RendElements/RendElement.cpp"
		"../Common/RendElements/CRELensOptics.h"
		"../Common/RendElements/CREClientPoly.h"
		"../Common/RendElements/CREDeferredShading.h"
		"../Common/RendElements/Stars.h"
		"../Common/RendElements/CREMeshImpl.h"
	SOURCE_GROUP "Common\\\\RendElements\\\\LensOptics"
		"../Common/RendElements/CameraOrbs.cpp"
		"../Common/RendElements/AbstractMeshElement.cpp"
		"../Common/RendElements/ChromaticRing.cpp"
		"../Common/RendElements/Ghost.cpp"
		"../Common/RendElements/Glow.cpp"
		"../Common/RendElements/IrisShafts.cpp"
		"../Common/RendElements/MeshUtil.cpp"
		"../Common/RendElements/OpticsElement.cpp"
		"../Common/RendElements/OpticsFactory.cpp"
		"../Common/RendElements/RootOpticsElement.cpp"
		"../Common/RendElements/Streaks.cpp"
		"../Common/RendElements/FlareSoftOcclusionQuery.cpp"
		"../Common/RendElements/ImageSpaceShafts.cpp"
		"../Common/RendElements/AbstractMeshElement.h"
		"../Common/RendElements/MeshUtil.h"
		"../Common/RendElements/OpticsFactory.h"
		"../Common/RendElements/Streaks.h"
		"../Common/RendElements/Timeline.h"
		"../Common/RendElements/CameraOrbs.h"
		"../Common/RendElements/ChromaticRing.h"
		"../Common/RendElements/Ghost.h"
		"../Common/RendElements/Glow.h"
		"../Common/RendElements/Interpolator.h"
		"../Common/RendElements/IrisShafts.h"
		"../Common/RendElements/OpticsElement.h"
		"../Common/RendElements/OpticsPredef.hpp"
		"../Common/RendElements/RootOpticsElement.h"
		"../Common/RendElements/FlareSoftOcclusionQuery.h"
		"../Common/RendElements/ImageSpaceShafts.h"
		"../Common/RendElements/OpticsGroup.h"
		"../Common/RendElements/OpticsGroup.cpp"
		"../Common/RendElements/OpticsProxy.h"
		"../Common/RendElements/OpticsProxy.cpp"
		"../Common/RendElements/OpticsReference.h"
		"../Common/RendElements/OpticsReference.cpp"
	SOURCE_GROUP "Common\\\\RendElements\\\\Utils"
		"../Common/RendElements/Utils/PolygonMath2D.cpp"
		"../Common/RendElements/Utils/PolygonMath2D.h"
		"../Common/RendElements/Utils/SpatialHashGrid.h"
)

add_sources("CryRenderer_textures_uber.cpp"
	PROJECTS CryRenderGNM CryRenderD3D11 CryRenderD3D12 CryRenderVulkan CryRenderOpenGL
	SOURCE_GROUP "Common\\\\Textures"
		"../Common/Textures/ITextureStreamer.cpp"
		"../Common/Textures/PlanningTextureStreamer.cpp"
		"../Common/Textures/PlanningTextureStreamer_Jobs.cpp"
		"../Common/Textures/TextureCompiler.cpp"
		"../Common/Textures/StatoscopeTextureStreaming.cpp"
		"../Common/Textures/DynTexture.cpp"
		"../Common/Textures/PowerOf2BlockPacker.cpp"
		"../Common/Textures/Texture.cpp"
		"../Common/Textures/TextureManager.cpp"
		"../Common/Textures/TextureStreaming.cpp"
		"../Common/Textures/PlanningTextureStreamer.h"
		"../Common/Textures/StatoscopeTextureStreaming.h"
		"../Common/Textures/TextureArrayAlloc.h"
		"../Common/Textures/TextureCompiler.h"
		"../Common/Textures/TextureStreamPool.h"
		"../Common/Textures/PowerOf2BlockPacker.h"
		"../Common/Textures/Texture.h"
		"../Common/Textures/TextureManager.h"
		"../Common/Textures/TextureHelpers.cpp"
		"../Common/Textures/TextureHelpers.h"
	SOURCE_GROUP "Common\\\\Textures\\\\Image"
		"../Common/Textures/Image/CImage.cpp"
		"../Common/Textures/Image/DDSImage.cpp"
		"../Common/Textures/Image/JpgImage.cpp"
		"../Common/Textures/Image/TgaImage.cpp"
		"../Common/Textures/Image/PngImage.cpp"
		"../Common/Textures/Image/TifImage.cpp"
		"../Common/Textures/Image/CImage.h"
		"../Common/Textures/Image/DDSImage.h"
)

add_sources("CryRenderer_uber_0.cpp"
	PROJECTS CryRenderGNM CryRenderD3D11 CryRenderD3D12 CryRenderVulkan CryRenderOpenGL
	SOURCE_GROUP "Header Files"
		"D3DREBreakableGlassBuffer.h"
		"D3D_SVO.h"
	SOURCE_GROUP "Source Files"
		"D3DAmbientOcclusion.cpp"
		"D3DColorGradingController.cpp"
		"D3DDebug.cpp"
		"D3DDeferredRender.cpp"
		"D3DDeferredShading.cpp"
		"D3DFont.cpp"
		"D3DFXPipeline.cpp"
		"D3DHDRRender.cpp"
		"D3DHWShader.cpp"
		"D3DHWShaderCompiling.cpp"
		"D3DOcclQuery.cpp"
		"D3DOculus.cpp"
		"D3DOpenVR.cpp"
		"D3DREBreakableGlass.cpp"
		"D3DREBreakableGlassBuffer.cpp"
		"D3D_SVO.cpp"
		"D3DMultiResRendering.cpp"
		"D3DOsvr.cpp"
)

add_sources("CryRenderer_uber_1.cpp"
	PROJECTS CryRenderGNM CryRenderD3D11 CryRenderD3D12 CryRenderVulkan CryRenderOpenGL
	SOURCE_GROUP "Source Files"
		"D3DRenderAuxGeom.cpp"
		"D3DRenderThread.cpp"
		"D3DRendPipeline.cpp"
		"D3DRendPipeline_Jobs.cpp"
		"D3DShaders.cpp"
		"D3DShadows.cpp"
		"D3DSprites.cpp"
		"D3DStereo.cpp"
		"D3DSystem.cpp"
		"D3DTexture.cpp"
		"D3DTexturesStreaming.cpp"
		"D3DTextureStreamPool.cpp"
		"D3DTiledShading.cpp"
		"CompiledRenderObject.cpp"
	SOURCE_GROUP "Source Files\\\\Benchmark Customization"
		"BenchmarkCustom/BenchmarkRendererSensor.h"
		"BenchmarkCustom/BenchmarkRendererSensor.cpp"
)

add_sources("CryRenderer_uber_2.cpp"
	PROJECTS CryRenderGNM CryRenderD3D11 CryRenderD3D12 CryRenderVulkan CryRenderOpenGL
	SOURCE_GROUP "Header Files"
		"SmartGlassManager.h"
	SOURCE_GROUP "Source Files"
		"DriverD3D.cpp"
		"PipelineProfiler.cpp"
		"SmartGlassContext.cpp"
		"SmartGlassManager.cpp"
		"StatoscopeRenderStats.cpp"
	SOURCE_GROUP "Source Files\\\\D3DPostProcess"
		"D3DPostProcess.cpp"
		"PostProcessDOF.cpp"
		"PostProcessFilters.cpp"
		"PostProcessGame.cpp"
		"PostProcessHud3D.cpp"
		"PostProcessMisc.cpp"
		"PostProcessMotionBlur.cpp"
		"PostProcessRenderModes.cpp"
		"PostProcessSunShafts.cpp"
		"PostProcessWater.cpp"
)

add_sources("CryRenderer_uber_3.cpp"
	PROJECTS CryRenderGNM CryRenderD3D11 CryRenderD3D12 CryRenderVulkan CryRenderOpenGL
	SOURCE_GROUP "Common"
		"../Common/Renderer_Jobs.cpp"
		"../Common/CommonRender.cpp"
		"../Common/DeferredRenderUtils.cpp"
		"../Common/IntroMovieRenderer.cpp"
		"../Common/MatrixStack.cpp"
		"../Common/LightVolumeBuffer.cpp"
		"../Common/ParticleBuffer.cpp"
		"../Common/RenderAuxGeom.cpp"
		"../Common/Renderer.cpp"
		"../Common/RendererCVars.cpp"
		"../Common/RenderPipeline.cpp"
		"../Common/RenderThread.cpp"
		"../Common/ShadowUtils.cpp"
		"../Common/TextMessages.cpp"
		"../Common/WaterUtils.cpp"
		"../Common/SmartGlassContext.h"
		"../Common/IntroMovieRenderer.h"
		"../Common/TextMessages.h"
		"../Common/Include_HLSL_CPP_Shared.h"
		"../Common/RenderView.cpp"
		"../Common/RenderItemDrawer.cpp"
		"../Common/Shadow_Renderer.cpp"
	SOURCE_GROUP "Common_h"
		"../Common/CommonRender.h"
		"../Common/RenderPipeline.h"
		"../Common/DeferredRenderUtils.h"
		"../Common/RenderFrameProfiler.h"
		"../Common/IColorGradingControllerInt.h"
		"../Common/OcclQuery.h"
		"../Common/RenderAuxGeom.h"
		"../Common/Renderer.h"
		"../Common/RendererCVars.h"
		"../Common/RenderThread.h"
		"../Common/Shadow_Renderer.h"
		"../Common/ShadowUtils.h"
		"../Common/WaterUtils.h"
		"../Common/ReverseDepth.h"
		"../Common/RenderView.h"
		"../Common/RenderItemDrawer.h"
		"../Common/LockFreeAddVector.h"
	SOURCE_GROUP "Header Files"
		"ShadowTextureGroupManager.h"
		"D3DTiledShading.h"
		"DeviceManager/D3D11/DeviceSubmissionQueue_D3D11.inl"
		"../Common/Textures/ITextureStreamer.h"
		"../Common/Shaders/ShaderAllocator.h"
		"../Common/CryNameR.h"
		"DeviceManager/D3D11/DeviceWrapper_D3D11.h"
		"../Common/ISmartGlassContext.h"
		"../Common/LightVolumeBuffer.h"
		"../Common/ParticleBuffer.h"
		"D3DColorGradingController.h"
		"D3DDebug.h"
		"D3DDeferredShading.h"
		"D3DHWShader.h"
		"D3DOculus.h"
		"D3DOpenVR.h"
		"D3DPostProcess.h"
		"D3DRenderAuxGeom.h"
		"D3DStereo.h"
		"../Common/Defs.h"
		"DeviceInfo.h"
		"DriverD3D.h"
		"NullD3D11Device.h"
		"PipelineProfiler.h"
		"resource.h"
		"StatoscopeRenderStats.h"
		"D3DMultiResRendering.h"
		"DeviceInfo.inl"
		"D3DOsvr.h"
		"CompiledRenderObject.h"
	SOURCE_GROUP "Scaleform"
		"../Scaleform/Scaleform.cpp"
		"../Scaleform/ScaleformRender.cpp"
		"../Scaleform/ScaleformPlayback.cpp"
		"../Scaleform/ScaleformRender.h"
		"../Scaleform/ScaleformPlayback.h"
)

add_sources("CryRenderer_uber_4.cpp"
	PROJECTS CryRenderGNM CryRenderD3D11 CryRenderD3D12 CryRenderVulkan CryRenderOpenGL
	SOURCE_GROUP "Common\\\\PostProcess"
		"../Common/PostProcess/PostEffects.cpp"
		"../Common/PostProcess/PostProcess.cpp"
		"../Common/PostProcess/PostProcessUtils.cpp"
		"../Common/PostProcess/PostEffects.h"
		"../Common/PostProcess/PostProcess.h"
		"../Common/PostProcess/PostProcessUtils.h"
	SOURCE_GROUP "Common\\\\RenderMesh"
		"../Common/RenderMesh_Render.cpp"
		"../Common/RenderMesh_SetMesh.cpp"
		"../Common/RenderMesh.cpp"
		"../Common/RenderMesh.h"
		"../Common/ComputeSkinningStorage.h"
	SOURCE_GROUP "Common\\\\Shaders"
		"../Common/Shaders/Parser.cpp"
		"../Common/Shaders/ParserBin.cpp"
		"../Common/Shaders/RemoteCompiler.cpp"
		"../Common/Shaders/ShaderCache.cpp"
		"../Common/Shaders/ShaderComponents.cpp"
		"../Common/Shaders/ShaderCore.cpp"
		"../Common/Shaders/ShaderFXParseBin.cpp"
		"../Common/Shaders/ShaderParse.cpp"
		"../Common/Shaders/ShaderScript.cpp"
		"../Common/Shaders/ShaderSerialize.cpp"
		"../Common/Shaders/ShaderTemplate.cpp"
		"../Common/Shaders/CShader.h"
		"../Common/Shaders/CShaderBin.h"
		"../Common/Shaders/Parser.h"
		"../Common/Shaders/ParserBin.h"
		"../Common/Shaders/RemoteCompiler.h"
		"../Common/Shaders/Shader.h"
		"../Common/Shaders/ShaderCache.h"
		"../Common/Shaders/ShaderComponents.h"
		"../Common/Shaders/ShaderSerialize.h"
		"../Common/Shaders/ShaderResources.h"
		"../Common/Shaders/ShaderResources.cpp"
)

add_sources("CryRenderer_uber_5.cpp"
	PROJECTS CryRenderGNM CryRenderD3D11 CryRenderD3D12 CryRenderVulkan CryRenderOpenGL
	SOURCE_GROUP "DeviceManager"
		"DevBuffer.cpp"
		"../Common/DevBuffer.h"
		"DeviceManager/TempDynBuffer.h"
		"DeviceManager/DeviceObjects.h"
		"DeviceManager/DeviceObjects.inl"
		"DeviceManager/DeviceObjects.cpp"
		"DeviceManager/DeviceObjectHelpers.h"
		"DeviceManager/DeviceObjectHelpers.cpp"
		"DeviceManager/DeviceResources.h"
		"DeviceManager/DeviceResources.cpp"
		"DeviceManager/DeviceFormats.h"
		"DeviceManager/DeviceFormats.cpp"
		"DeviceManager/DeviceCommandList.inl"
)

add_sources("CryRenderer_uber_6.cpp"
	PROJECTS CryRenderGNM CryRenderD3D11 CryRenderD3D12 CryRenderVulkan CryRenderOpenGL
	SOURCE_GROUP "GraphicsPipeline"
		"GraphicsPipeline/AutoExposure.h"
		"GraphicsPipeline/AutoExposure.cpp"
		"GraphicsPipeline/Bloom.h"
		"GraphicsPipeline/Bloom.cpp"
		"GraphicsPipeline/ClipVolumes.h"
		"GraphicsPipeline/ClipVolumes.cpp"
		"GraphicsPipeline/ColorGrading.h"
		"GraphicsPipeline/ColorGrading.cpp"
		"GraphicsPipeline/ComputeSkinning.h"
		"GraphicsPipeline/ComputeSkinning.cpp"
		"GraphicsPipeline/DepthReadback.h"
		"GraphicsPipeline/DepthReadback.cpp"
		"GraphicsPipeline/GpuParticles.h"
		"GraphicsPipeline/GpuParticles.cpp"
		"GraphicsPipeline/DeferredDecals.h"
		"GraphicsPipeline/DeferredDecals.cpp"
		"GraphicsPipeline/DepthOfField.h"
		"GraphicsPipeline/DepthOfField.cpp"
		"GraphicsPipeline/Fog.h"
		"GraphicsPipeline/Fog.cpp"
		"GraphicsPipeline/LensOptics.h"
		"GraphicsPipeline/LensOptics.cpp"
		"GraphicsPipeline/MobileComposition.h"
		"GraphicsPipeline/MobileComposition.cpp"
		"GraphicsPipeline/MotionBlur.h"
		"GraphicsPipeline/MotionBlur.cpp"
		"GraphicsPipeline/HeightMapAO.h"
		"GraphicsPipeline/HeightMapAO.cpp"
		"GraphicsPipeline/PostAA.h"
		"GraphicsPipeline/PostAA.cpp"
		"GraphicsPipeline/PostEffects.h"
		"GraphicsPipeline/PostEffects.cpp"
		"GraphicsPipeline/Rain.h"
		"GraphicsPipeline/Rain.cpp"
		"GraphicsPipeline/SceneCustom.h"
		"GraphicsPipeline/SceneCustom.cpp"
		"GraphicsPipeline/SceneForward.h"
		"GraphicsPipeline/SceneForward.cpp"
		"GraphicsPipeline/SceneGBuffer.h"
		"GraphicsPipeline/SceneGBuffer.cpp"
		"GraphicsPipeline/ScreenSpaceObscurance.h"
		"GraphicsPipeline/ScreenSpaceObscurance.cpp"
		"GraphicsPipeline/ScreenSpaceReflections.h"
		"GraphicsPipeline/ScreenSpaceReflections.cpp"
		"GraphicsPipeline/ScreenSpaceSSS.h"
		"GraphicsPipeline/ScreenSpaceSSS.cpp"
		"GraphicsPipeline/ShadowMap.h"
		"GraphicsPipeline/ShadowMap.cpp"
		"GraphicsPipeline/ShadowMask.h"
		"GraphicsPipeline/ShadowMask.cpp"
		"GraphicsPipeline/Snow.h"
		"GraphicsPipeline/Snow.cpp"
		"GraphicsPipeline/StandardGraphicsPipeline.h"
		"GraphicsPipeline/StandardGraphicsPipeline.cpp"
		"GraphicsPipeline/SunShafts.h"
		"GraphicsPipeline/SunShafts.cpp"
		"GraphicsPipeline/TiledShading.h"
		"GraphicsPipeline/TiledShading.cpp"
		"GraphicsPipeline/ToneMapping.h"
		"GraphicsPipeline/ToneMapping.cpp"
		"GraphicsPipeline/VolumetricClouds.h"
		"GraphicsPipeline/VolumetricClouds.cpp"
		"GraphicsPipeline/VolumetricFog.h"
		"GraphicsPipeline/VolumetricFog.cpp"
		"GraphicsPipeline/Water.h"
		"GraphicsPipeline/Water.cpp"
		"GraphicsPipeline/WaterRipples.h"
		"GraphicsPipeline/WaterRipples.cpp"
	SOURCE_GROUP "GraphicsPipeline\\\\Common"
		"GraphicsPipeline/Common/ComputeRenderPass.h"
		"GraphicsPipeline/Common/ComputeRenderPass.cpp"
		"GraphicsPipeline/Common/FullscreenPass.h"
		"GraphicsPipeline/Common/FullscreenPass.cpp"
		"GraphicsPipeline/Common/GraphicsPipeline.h"
		"GraphicsPipeline/Common/GraphicsPipelineStage.h"
		"GraphicsPipeline/Common/GraphicsPipelineStateSet.h"
		"GraphicsPipeline/Common/GraphicsPipelineStateSet.cpp"
		"GraphicsPipeline/Common/RenderPassScheduler.h"
		"GraphicsPipeline/Common/RenderPassScheduler.cpp"
		"GraphicsPipeline/Common/PrimitiveRenderPass.h"
		"GraphicsPipeline/Common/PrimitiveRenderPass.cpp"
		"GraphicsPipeline/Common/RenderPassBase.h"
		"GraphicsPipeline/Common/SceneRenderPass.h"
		"GraphicsPipeline/Common/SceneRenderPass.cpp"
		"GraphicsPipeline/Common/UtilityPasses.h"
		"GraphicsPipeline/Common/UtilityPasses.cpp"
)

add_sources("NoUberFile"
	PROJECTS CryRenderGNM CryRenderD3D11 CryRenderD3D12 CryRenderVulkan CryRenderOpenGL
	SOURCE_GROUP "Root"
		"../StdAfx.cpp"
		"../StdAfx.h"
		"ResourceCompilerHelpers.cpp"
)

end_sources()
#END-FILE-LIST

set(extra_defines)

if(PLUGIN_VR_OCULUS OR PLUGIN_VR_OSVR OR PLUGIN_VR_OPENVR)
	message(STATUS "Enabling VR rendering.")
	list(APPEND extra_defines -DINCLUDE_VR_RENDERING)
endif()

if (NOT EXISTS "${SDK_DIR}/NVIDIA/NVAPI_r386")
	message(STATUS "NVAPI SDK v.386 not found, excluding from the build.")
	list(APPEND extra_defines -DEXCLUDE_NV_API)
endif()

if (NOT EXISTS "${SDK_DIR}/AMD")
	message(STATUS "AMD AGS SDK not found, excluding from the build.")
	list(APPEND extra_defines -DEXCLUDE_AMD_API)
endif()

if (RENDERER_DX11)
	CryEngineModule(CryRenderD3D11 FORCE_SHARED PCH "../StdAfx.cpp" SOLUTION_FOLDER "CryEngine")
	
	target_include_directories(${THIS_PROJECT} PRIVATE .. "${SDK_DIR}/squish-ccr")
	target_link_libraries(${THIS_PROJECT} PRIVATE lzma lzss lz4 zlib)

	if (WIN32 OR WIN64)
		set_target_properties(${THIS_PROJECT} PROPERTIES LINK_FLAGS /NODEFAULTLIB:libcmt.lib)
		target_compile_definitions(${THIS_PROJECT} PRIVATE -DCRY_RENDERER_DIRECT3D=110 -DDO_RENDERSTATS -D_RENDERER ${extra_defines})
		target_link_libraries(${THIS_PROJECT} PRIVATE dxguid d3d11 d3d10 d3dcompiler Ole32 Gdi32 wininet Shell32 png16 tiff)
	elseif(DURANGO)
		target_compile_definitions(${THIS_PROJECT} PRIVATE -DCRY_RENDERER_DIRECT3D=111 -DDO_RENDERSTATS -D_RENDERER ${extra_defines})
		target_link_libraries(${THIS_PROJECT} PRIVATE ws2_32 SmartGlassInterop d3d11_x d3dcompiler dxguid xg_x uuid kernelx)
	elseif(ORBIS)
		target_include_directories(${THIS_PROJECT} PRIVATE ../../.. )
		target_compile_definitions(${THIS_PROJECT} PRIVATE -DCRY_RENDERER_DIRECT3D=111 -DDO_RENDERSTATS -D_RENDERER ${extra_defines})
		target_compile_options(${THIS_PROJECT} PRIVATE $<$<CONFIG:Release>:-flto>)
		target_link_libraries(${THIS_PROJECT} PRIVATE SceSystemService_stub_weak SceGnmDriver_stub_weak $<$<NOT:$<CONFIG:Release>>:SceGnm> $<$<NOT:$<CONFIG:Release>>:SceGnmx> $<$<CONFIG:Release>:SceGnm_lto> $<$<CONFIG:Release>:SceGnmx_lto>)
	endif()
else()
	CryFileContainer(CryRenderD3D11 SOLUTION_FOLDER "CryEngine")
endif()

if (RENDERER_OPENGL)
	CryEngineModule(CryRenderOpenGL FORCE_SHARED PCH "../StdAfx.cpp" SOLUTION_FOLDER "CryEngine")
	target_include_directories(${THIS_PROJECT} PRIVATE .. "${SDK_DIR}/squish-ccr")
	target_compile_definitions(${THIS_PROJECT} PRIVATE -DCRY_RENDERER_DIRECT3D=110 -DCRY_RENDERER_OPENGL=440 -DDO_RENDERSTATS -D_RENDERER ${extra_defines})
	target_link_libraries(${THIS_PROJECT} PRIVATE lzma lzss lz4 zlib)

	if (WIN32 OR WIN64)
		target_include_directories(${THIS_PROJECT} PRIVATE "${SDK_DIR}/squish-ccr" "${CRYENGINE_DIR}/Code/Tools/LibTIFF" "${CRYENGINE_DIR}/Code/Tools/HLSLCrossCompiler/include")
		set_target_properties(${THIS_PROJECT} PROPERTIES LINK_FLAGS /NODEFAULTLIB:libcmt.lib)
		target_link_libraries(${THIS_PROJECT} PRIVATE opengl32 winmm Ole32 Gdi32 wininet Shell32 png16 tiff)
		if(WIN64)
			find_library(LIBHLSLCC libHLSLcc PATHS "${CRYENGINE_DIR}/Code/Tools/HLSLCrossCompiler/lib/win64")
		elseif(WIN32)
			find_library(LIBHLSLCC libHLSLcc PATHS "${CRYENGINE_DIR}/Code/Tools/HLSLCrossCompiler/lib/win32")
		endif()
		mark_as_advanced(FORCE LIBHLSLCC)
		target_link_libraries(${THIS_PROJECT} PRIVATE "${LIBHLSLCC}")
	elseif(APPLE)
		target_include_directories(${THIS_PROJECT} PRIVATE "${SDK_DIR}/SDL2/include/SDL" "${SDK_DIR}/SDL2/include/mac" "${CRYENGINE_DIR}/Code/Tools/LibTIFF" "${CRYENGINE_DIR}/Code/Tools/HLSLCrossCompiler/include")
		find_library(SDL2 SDL2 PATHS "${SDK_DIR}/SDL2/lib/mac")
		find_library(LIBHLSLCC HLSLcc PATHS "${CRYENGINE_DIR}/Code/Tools/HLSLCrossCompiler/lib/mac")
		find_library(OPENGL OpenGL)
		find_library(APPLICATIONSERVICES ApplicationServices)
		find_library(IOKIT IOKit)
		target_link_libraries(${THIS_PROJECT} PRIVATE "${SDL2}" "${LIBHLSLCC}" "${OPENGL}" "${APPLICATIONSERVICES}" "${IOKIT}")
	elseif(LINUX)
		target_link_libraries(${THIS_PROJECT} PRIVATE SDL2)
		target_include_directories(${THIS_PROJECT} PRIVATE "${CRYENGINE_DIR}/Code/Tools/HLSLCrossCompiler/include")	
		if(LINUX64)
			find_library(LIBHLSLCC HLSLcc PATHS "${CRYENGINE_DIR}/Code/Tools/HLSLCrossCompiler/lib/linux")
			target_link_libraries(${THIS_PROJECT} PRIVATE "${LIBHLSLCC}")
		endif()
	elseif(ANDROID)
#		target_compile_definitions(${THIS_PROJECT} PRIVATE -DGLEW_MX -DDXGL_ANDROID_GL)
		target_compile_definitions(${THIS_PROJECT} PRIVATE -DGLEW_MX -DOPENGL_ES)

		target_include_directories(${THIS_PROJECT} PRIVATE 
			"${CRYENGINE_DIR}/Code/CryEngine/CrySystem"
			"${SDK_DIR}/SDL2/include/SDL"
			"${SDK_DIR}/SDL2/include/linux" 
			"${CRYENGINE_DIR}/Code/Tools/SDLExtension/src/include" 
			"${CRYENGINE_DIR}/Code/Tools/HLSLCrossCompiler/include")
		target_link_libraries(${THIS_PROJECT} PRIVATE EGL GLESv1_CM SDL2)
	endif()
else()
	CryFileContainer(CryRenderOpenGL SOLUTION_FOLDER "CryEngine")
endif()

if (RENDERER_DX12)
	CryEngineModule(CryRenderD3D12 FORCE_SHARED PCH "../StdAfx.cpp" SOLUTION_FOLDER "CryEngine")

	target_compile_definitions(${THIS_PROJECT} PRIVATE -DCRY_RENDERER_DIRECT3D=120 -DDO_RENDERSTATS -D_RENDERER ${extra_defines})
	target_include_directories(${THIS_PROJECT} PRIVATE .. "${SDK_DIR}" "${SDK_DIR}/squish-ccr" "${CRYENGINE_DIR}/Code/Tools/LibTIFF" "${CRYENGINE_DIR}/Code/CryEngine/RenderDll/XRenderD3D9/DX12/Includes")
	target_link_libraries(${THIS_PROJECT} PRIVATE lzma lzss lz4 zlib)
	
	if (WIN32 OR WIN64)
		set_target_properties(${THIS_PROJECT} PROPERTIES LINK_FLAGS /NODEFAULTLIB:libcmt.lib)
		target_link_libraries(${THIS_PROJECT} PRIVATE lzma lzss lz4 zlib dxguid d3d12 dxgi d3dcompiler Ole32 Gdi32 wininet Shell32 png16 tiff)
	elseif(DURANGO)
		target_link_libraries(${THIS_PROJECT} PRIVATE ws2_32 SmartGlassInterop d3d12_x d3dcompiler dxguid xg_x uuid kernelx)
	endif()
else()
	CryFileContainer(CryRenderD3D12 SOLUTION_FOLDER "CryEngine")
endif()

if (RENDERER_VULKAN)
	add_subdirectory("${CRY_LIBS_DIR}/spirv-cross" "${CMAKE_CURRENT_BINARY_DIR}/spirv-cross")

	CryEngineModule(CryRenderVulkan PCH "../StdAfx.cpp" SOLUTION_FOLDER "CryEngine")
	target_compile_definitions(${THIS_PROJECT} PRIVATE -DCRY_RENDERER_VULKAN=10 -DDO_RENDERSTATS -D_RENDERER)
	target_include_directories(${THIS_PROJECT} PRIVATE ..)
	target_include_directories(${THIS_PROJECT} PRIVATE "${SDK_DIR}/squish-ccr")
	target_include_directories(${THIS_PROJECT} PRIVATE "${SDK_DIR}/VulkanSDK/Include")
	target_link_libraries(${THIS_PROJECT} PRIVATE lzma lzss lz4 zlib spirv-cross)
	if(WIN32 OR WIN64)
		target_link_libraries(${THIS_PROJECT} PRIVATE Ole32 Gdi32 wininet Shell32 png16 dxguid vulkan-1 tiff)
		set_target_properties(${THIS_PROJECT} PROPERTIES LINK_FLAGS /NODEFAULTLIB:libcmt.lib)
		set_libpath_flag()
		set_property(TARGET ${THIS_PROJECT} APPEND_STRING PROPERTY LINK_FLAGS " ${LIBPATH_FLAG}\"${SDK_DIR}/VulkanSDK/Lib\"")
	elseif(ANDROID)
		target_include_directories(${THIS_PROJECT} PRIVATE 
			"${CRYENGINE_DIR}/Code/Tools/HLSLCrossCompiler/include")

		target_link_libraries(${THIS_PROJECT} PRIVATE SDL2)
		target_link_libraries(${THIS_PROJECT} PRIVATE vulkan)
	endif()
else()
	CryFileContainer(CryRenderVulkan SOLUTION_FOLDER "CryEngine")
endif()

if (EXISTS "${SCE_ORBIS_SDK_DIR}" AND EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/GNM")
	if (RENDERER_GNM)
		CryEngineModule(CryRenderGNM PCH "../StdAfx.cpp" SOLUTION_FOLDER "CryEngine")
		target_include_directories(${THIS_PROJECT} PRIVATE ..)
		target_compile_definitions(${THIS_PROJECT} PRIVATE -D_RENDERER -DDO_RENDERSTATS -DCRY_RENDERER_GNM=40 ${extra_defines})
		target_compile_options(${THIS_PROJECT} PRIVATE $<$<CONFIG:Release>:-flto>)
		target_link_libraries(${THIS_PROJECT} PRIVATE lzma lzss lz4 zlib SceSystemService_stub_weak SceGnmDriver_stub_weak $<$<NOT:$<CONFIG:Release>>:SceGnm> $<$<NOT:$<CONFIG:Release>>:SceGnmx> $<$<NOT:$<CONFIG:Release>>:SceDbg_stub_weak> $<$<CONFIG:Release>:SceGnm_lto> $<$<CONFIG:Release>:SceGnmx_lto>)
	else()
		CryFileContainer(CryRenderGNM SOLUTION_FOLDER "CryEngine")
	endif()
endif()
