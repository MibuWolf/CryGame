#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- steam_lobby.waf_files --
sources_platform(WIN32)
add_sources("CryLobby_steam_uber.cpp"
	PROJECTS CryLobby
	SOURCE_GROUP "Steam"
		"Steam/CrySteamVoice.h"
		"Steam/CrySteamFriends.cpp"
		"Steam/CrySteamFriendsManagement.cpp"
		"Steam/CrySteamLobby.cpp"
		"Steam/CrySteamMatchMaking.cpp"
		"Steam/CrySteamStats.cpp"
		"Steam/CrySteamFriends.h"
		"Steam/CrySteamFriendsManagement.h"
		"Steam/CrySteamLobby.h"
		"Steam/CrySteamMatchMaking.h"
		"Steam/CrySteamStats.h"
		"Steam/CrySteamReward.h"
		"Steam/CrySteamReward.cpp"
)

# -- durango_lobby.waf_files --
sources_platform(DURANGO)
add_sources("CryLobby_durango_live_uber.cpp"
	PROJECTS CryLobby
	SOURCE_GROUP "DurangoLive"
		"DurangoLive/DurangoChat/ChatIntegrationLayer.h"
		"DurangoLive/DurangoChat/ChatIntegrationLayer.cpp"
		"DurangoLive/CryDurangoLiveLobby.cpp"
		"DurangoLive/CryDurangoLiveMatchMaking.cpp"
		"DurangoLive/CryDurangoLiveLobby.h"
		"DurangoLive/CryDurangoLiveLobbyPacket.h"
		"DurangoLive/CryDurangoLiveMatchMaking.h"
		"DurangoLive/CryDurangoLiveOnlineStorage.h"
		"DurangoLive/CryDurangoLiveOnlineStorage.cpp"
		"DurangoLive/CryDurangoLiveLobbyUI.h"
		"DurangoLive/CryDurangoLiveLobbyUI.cpp"
		"DurangoLive/platform.h"
		"DurangoLive/platform.cpp"
)

# -- crylobby_core.waf_files --
sources_platform(ALL)
add_sources("CryLobby_uber_0.cpp"
	PROJECTS CryLobby
	SOURCE_GROUP "Interface"
		"../Interface/CryLobby/ICryLobby.h"
		"../Interface/CryLobby/ICryLobbyEvent.h"
		"../Interface/CryLobby/ICryLobbyPrivate.h"
		"../Interface/CryLobby/CryLobbyPacket.h"
		"../Interface/CryLobby/ICryLobbyUI.h"
		"../Interface/CryLobby/ICryFriends.h"
		"../Interface/CryLobby/ICryFriendsManagement.h"
		"../Interface/CryLobby/ICryReward.h"
		"../Interface/CryLobby/ICrySignIn.h"
		"../Interface/CryLobby/ICryTCPService.h"
		"../Interface/CryLobby/ICryVoice.h"
		"../Interface/CryLobby/ICryMatchMaking.h"
	SOURCE_GROUP "LAN"
		"LAN/CryLANLobby.cpp"
		"LAN/CryLANMatchMaking.cpp"
		"LAN/CryLANLobby.h"
		"LAN/CryLANMatchMaking.h"
	SOURCE_GROUP "Root"
		"CryDedicatedServer.cpp"
		"CryDedicatedServerArbitrator.cpp"
		"CryFriends.cpp"
		"CryFriendsManagement.cpp"
		"CryHostMigration.cpp"
		"CryLobby.cpp"
		"CryLobbyDLL.cpp"
		"CryLobbyUI.cpp"
		"CryMatchMaking.cpp"
		"CryReward.cpp"
		"CrySignIn.cpp"
		"CryStats.cpp"
		"CryTCPService.cpp"
		"CryTCPServiceFactory.cpp"
		"CryVoice.cpp"
		"LobbyCVars.cpp"
		"CryDedicatedServer.h"
		"CryDedicatedServerArbitrator.h"
		"CryFriends.h"
		"CryFriendsManagement.h"
		"CryHostMigration.h"
		"CryLobby.h"
		"CryLobbyUI.h"
		"CryMatchMaking.h"
		"CryReward.h"
		"CrySharedLobbyPacket.h"
		"CrySignIn.h"
		"CryStats.h"
		"CryTCPService.h"
		"CryTCPServiceFactory.h"
		"CryVoice.h"
		"LobbyCVars.h"
		"resource.h"
		"StdAfx.h"
)

add_sources("NoUberFile"
	PROJECTS CryLobby
	SOURCE_GROUP "Root"
		"StdAfx.cpp"
)

end_sources()
#END-FILE-LIST

CryEngineModule(CryLobby PCH "StdAfx.cpp" SOLUTION_FOLDER "CryPlugins")
target_include_directories(${THIS_PROJECT}
PUBLIC
	"$<BUILD_INTERFACE:${CRYENGINE_DIR}/Code/CryPlugins/CryLobby/Interface>" "$<INSTALL_INTERFACE:include/CryLobby>"
	"$<BUILD_INTERFACE:${CRYENGINE_DIR}/Code/CryEngine/CryCommon/CryLobby>" "$<INSTALL_INTERFACE:include/CryCommon/CryLobby>"
PRIVATE
	"${CRYENGINE_DIR}/Code/CryEngine/CryNetwork"
	"${SDK_DIR}/speex-1.0.5/include"
)

if(WIN64)
	find_library(SPEEX libspeex-1.0.5 PATHS "${SDK_DIR}/speex-1.0.5/lib/x64" )
elseif(WIN32)
	find_library(SPEEX libspeex-1.0.5 PATHS "${SDK_DIR}/speex-1.0.5/lib/win32" )
endif()
mark_as_advanced(FORCE SPEEX)

if (WIN32 OR WIN64)
	target_link_libraries(${THIS_PROJECT} PRIVATE Ws2_32 Mswsock "${SPEEX}")
elseif(DURANGO)
	target_link_libraries(${THIS_PROJECT} PRIVATE Ws2_32 uuid)
	set_property( TARGET ${THIS_PROJECT} APPEND_STRING PROPERTY VS_CONFIG_PROPERTY_GROUP_ReferencePath "${CMAKE_CURRENT_SOURCE_DIR}/DurangoLive/DurangoChat/Microsoft.Xbox.GameChat;${DURANGO_SDK}/ExtensionSDKs/xbox services api/8.0/references/commonconfiguration/neutral")		
	target_compile_options(${THIS_PROJECT} PRIVATE /ZW /wd4530)
elseif(ORBIS)
	target_compile_options(${THIS_PROJECT} PRIVATE -Wno-deprecated-declarations)
	target_link_libraries(${THIS_PROJECT} PRIVATE SceNpCommerce_stub_weak SceJson2_stub_weak)
endif()
