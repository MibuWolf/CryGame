#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- crysensorsystem.waf_files --
sources_platform(ALL)
add_sources("CrySensorSystem_uber_0.cpp"
	SOURCE_GROUP "Interface"
		"../Interface/ICrySensorSystemPlugin.h"
		"../Interface/ISensorMap.h"
		"../Interface/ISensorSystem.h"
		"../Interface/ISensorTagLibrary.h"
		"../Interface/SensorBounds.h"
	SOURCE_GROUP "Module"
		"CrySensorSystemPluginDLL.cpp"
		"CrySensorSystemPluginDLL.h"
		"OctreePlotter.inl"
		"OctreePlotter.h"
		"SchematycEntitySensorVolumeComponent.cpp"
		"SchematycEntitySensorVolumeComponent.h"
		"SensorMap.cpp"
		"SensorMap.h"
		"SensorSystem.cpp"
		"SensorSystem.h"
		"SensorTagLibrary.cpp"
		"SensorTagLibrary.h"
)

add_sources("NoUberFile"
	SOURCE_GROUP "Module"
		"StdAfx.cpp"
		"StdAfx.h"
)

end_sources()
#END-FILE-LIST

if(PLUGIN_SCHEMATYC)
	CryEngineModule(CrySensorSystem PCH "StdAfx.cpp" SOLUTION_FOLDER "CryPlugins")

	target_include_directories(${THIS_PROJECT}
	PRIVATE 
		"${CRYENGINE_DIR}/Code/CryEngine/CryCommon"
		"${CRYENGINE_DIR}/Code/CryEngine/CrySchematyc/Core/Interface"
		"${CRYENGINE_DIR}/Code/CryEngine/CrySchematyc/STDEnv/Interface"
		"${CRYENGINE_DIR}/Code/CryExtensions/CryLink/Interface"
	PUBLIC
		../Interface
	)

	if(LINUX)
	        target_compile_options(${THIS_PROJECT} PRIVATE -fPIC)
	endif()
endif()
