#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- uqs_stdlib.waf_files --
sources_platform(ALL)
add_sources("NoUberFile"
	SOURCE_GROUP "stdlib"
		"stdlib/StdAfx.cpp"
		"stdlib/StdAfx.h"
)

add_sources("UQS_uber_stdlib.cpp"
	SOURCE_GROUP "Root"
		"StdLibRegistration.h"
		"StdLibRegistration.cpp"
	SOURCE_GROUP "stdlib"
		"stdlib/DeferredEvaluators.cpp"
		"stdlib/DeferredEvaluators.h"
		"stdlib/Functions.cpp"
		"stdlib/Functions.h"
		"stdlib/Generators.cpp"
		"stdlib/Generators.h"
		"stdlib/InstantEvaluators.cpp"
		"stdlib/InstantEvaluators.h"
		"stdlib/ItemDebugProxies.cpp"
		"stdlib/ItemDebugProxies.h"
		"stdlib/ItemDebugRendering.h"
		"stdlib/ItemDebugRendering.cpp"
		"stdlib/Items.cpp"
		"stdlib/ItemStringConversions.cpp"
		"stdlib/ItemStringConversions.h"
		"stdlib/ItemMonitors.h"
		"stdlib/ItemMonitors.cpp"
		"stdlib/SchematycSupport.cpp"
)

end_sources()
#END-FILE-LIST

CryEngineStaticModule(CryUQS_StdLib PCH "stdlib/StdAfx.cpp" SOLUTION_FOLDER "CryPlugins/CryUQS")
target_link_libraries (${THIS_PROJECT} PRIVATE
	CryUQS_Shared
	CryUQS_Client
)

target_include_directories(${THIS_PROJECT}
	PRIVATE "stdlib"
	PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}"
)

if(OPTION_UQS_SCHEMATYC_SUPPORT)
	target_include_directories(${THIS_PROJECT}
		PRIVATE "${CRYENGINE_DIR}/Code/CryEngine/CrySchematyc/Core/Interface"
		PRIVATE "${CRYENGINE_DIR}/Code/CryEngine/CrySchematyc/STDEnv/Interface"
	)
endif()
