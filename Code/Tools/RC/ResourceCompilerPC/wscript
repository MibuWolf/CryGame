# Copyright 2001-2017 Crytek GmbH / Crytek Group. All rights reserved.

def build(bld):
	fbx_sdk_subfolder = 'vs2012'
	try:
		msvc_version = bld.env['MSVC_VERSION']
		if msvc_version == '11.0':
			fbx_sdk_subfolder = 'vs2012'
		if msvc_version == '12.0':
			fbx_sdk_subfolder = 'vs2013'
		if msvc_version == '14.0':
			fbx_sdk_subfolder = 'vs2015'
	except:
		pass

	bld.CryResourceCompilerModule(
		target    = 'ResourceCompilerPC',
		vs_filter = 'RC',		
		file_list = 'resourcecompilerpc.waf_files',
		cxxflags = ['/EHsc', '/GR'],
		
		defines         = ['CRYTOOLS', 'RESOURCECOMPILERPC_EXPORTS', 'OFFLINE_COMPUTATION'],
		release_defines = ['NDEBUG'],
		debug_defines   = ['_DEBUG'],

		includes    = [
			'.',
			Path('Code/Tools'),
			Path('Code/Tools/RC/ResourceCompiler'),
			Path('Code/Tools/CryCommonTools'),
			Path('Code/CryEngine/Cry3DEngine'),
			Path('Code/SDKs'),
			Path('Code/Sandbox'),
			Path('Code/SDKs/Alembic/alembic-1.1.0/include'),
			Path('Code/SDKs/Alembic/ilmbase-1.0.2/include'),
			Path('Code/SDKs/FbxSdk/include'),
		],

		win_lib                   = ['Gdi32', 'Shell32', 'Ole32', 'libfbxsdk-mt', 'dbghelp', 'Wininet'],

		win_x86_debug_libpath     = Path('Code/SDKs/FbxSdk/lib/' + fbx_sdk_subfolder + '/x86/debug'),
		win_x86_release_libpath   = Path('Code/SDKs/FbxSdk/lib/' + fbx_sdk_subfolder + '/x86/release'),
		
		win_x64_debug_libpath     = Path('Code/SDKs/FbxSdk/lib/' + fbx_sdk_subfolder + '/x64/debug'),
		win_x64_release_libpath   = Path('Code/SDKs/FbxSdk/lib/' + fbx_sdk_subfolder + '/x64/release'),
		
		export_definitions    = 'ResourceCompilerPlugin.def',

		use_module = [ 'lua', 'vco' ]
	)
